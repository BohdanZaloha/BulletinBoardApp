-- Bulletin Board DB - full setup script
-- Creates database, tables, indexes and stored procedures

IF DB_ID(N'BulletinBoard_DB') IS NULL
BEGIN
    CREATE DATABASE [BulletinBoard_DB];
END
GO

USE [BulletinBoard_DB];
GO

SET ANSI_NULLS ON;
SET QUOTED_IDENTIFIER ON;
GO

-- Tables

IF OBJECT_ID(N'dbo.Categories', N'U') IS NULL
BEGIN
    CREATE TABLE dbo.Categories (
        CategoryId INT NOT NULL PRIMARY KEY,
        Name NVARCHAR(200) NOT NULL
    );
    CREATE UNIQUE INDEX UX_Categories_Name ON dbo.Categories(Name);
END
GO

IF OBJECT_ID(N'dbo.SubCategories', N'U') IS NULL
BEGIN
    CREATE TABLE dbo.SubCategories (
        SubCategoryId INT NOT NULL PRIMARY KEY,
        Name NVARCHAR(100) NOT NULL,
        CategoryId INT NOT NULL
    );
    ALTER TABLE dbo.SubCategories 
      ADD CONSTRAINT FK_SubCategories_Categories
      FOREIGN KEY (CategoryId) REFERENCES dbo.Categories(CategoryId);
    CREATE UNIQUE INDEX UX_SubCategories_Category_Name ON dbo.SubCategories(CategoryId, Name);
END
GO

IF OBJECT_ID(N'dbo.Announcements', N'U') IS NULL
BEGIN
    CREATE TABLE dbo.Announcements (
        Id INT IDENTITY(1,1) NOT NULL CONSTRAINT PK_Announcements PRIMARY KEY,
        Title NVARCHAR(200) NOT NULL,
        Description NVARCHAR(MAX) NOT NULL,
        CreatedDate DATETIME NOT NULL CONSTRAINT DF_Announcements_CreatedDate DEFAULT (GETDATE()),
        Status BIT NOT NULL,
        CategoryId INT NOT NULL,
        SubCategoryId INT NOT NULL
    );

    ALTER TABLE dbo.Announcements
      ADD CONSTRAINT FK_Announcements_Categories
      FOREIGN KEY (CategoryId) REFERENCES dbo.Categories(CategoryId);

    ALTER TABLE dbo.Announcements
      ADD CONSTRAINT FK_Announcements_SubCategories
      FOREIGN KEY (SubCategoryId) REFERENCES dbo.SubCategories(SubCategoryId);

    CREATE INDEX IX_Announcements_CreatedDate ON dbo.Announcements(CreatedDate);
    CREATE INDEX IX_Announcements_Category_SubCategory ON dbo.Announcements(CategoryId, SubCategoryId);
END
GO

-- Stored Procedures

-- AddAnnouncement
CREATE OR ALTER PROCEDURE dbo.AddAnnouncement
    @Title         NVARCHAR(200),
    @Description   NVARCHAR(MAX),
    @Status        BIT,
    @CategoryId    INT,
    @SubCategoryId INT
AS
BEGIN
    SET NOCOUNT ON;

    IF NOT EXISTS (
        SELECT 1
        FROM dbo.SubCategories sc
        WHERE sc.SubCategoryId = @SubCategoryId
          AND sc.CategoryId    = @CategoryId
    )
    BEGIN
        THROW 50001, 'SubCategoryId does not belong to CategoryId.', 1;
    END;

    INSERT INTO dbo.Announcements (Title, Description, Status, CategoryId, SubCategoryId)
    VALUES (@Title, @Description, @Status, @CategoryId, @SubCategoryId);

    SELECT CAST(SCOPE_IDENTITY() AS INT) AS Id;
END
GO

-- DeleteAnnouncementById
CREATE OR ALTER PROCEDURE dbo.DeleteAnnouncementById
    @Id INT
AS
BEGIN
    SET NOCOUNT ON;

    DELETE FROM dbo.Announcements
    WHERE Id = @Id;

    SELECT @@ROWCOUNT AS RowsAffected;
END
GO

-- GetAllAnnouncements
CREATE OR ALTER PROCEDURE dbo.GetAllAnnouncements
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        a.Id,
        a.Title,
        a.Description,
        a.CreatedDate,
        a.Status,
        a.CategoryId,
        c.Name AS CategoryName,
        a.SubCategoryId,
        sc.Name AS SubCategoryName
    FROM dbo.Announcements AS a
    JOIN dbo.Categories     AS c  ON c.CategoryId     = a.CategoryId
    JOIN dbo.SubCategories  AS sc ON sc.SubCategoryId = a.SubCategoryId
    ORDER BY a.CreatedDate DESC, a.Id DESC;
END
GO

-- GetAllCategories
CREATE OR ALTER PROCEDURE dbo.GetAllCategories
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        CategoryId,
        Name
    FROM dbo.Categories
    ORDER BY Name;
END
GO

-- GetAllSubCategories
CREATE OR ALTER PROCEDURE dbo.GetAllSubCategories
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        SubCategoryId,
        CategoryId,
        Name
    FROM dbo.SubCategories
    ORDER BY Name;
END
GO

-- GetAnnouncementById
CREATE OR ALTER PROCEDURE dbo.GetAnnouncementById
    @Id INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        a.Id,
        a.Title,
        a.Description,
        a.CreatedDate,
        a.Status,
        a.CategoryId,
        c.Name AS CategoryName,
        a.SubCategoryId,
        sc.Name AS SubCategoryName
    FROM dbo.Announcements AS a
    JOIN dbo.Categories     AS c  ON a.CategoryId     = c.CategoryId
    JOIN dbo.SubCategories  AS sc ON a.SubCategoryId  = sc.SubCategoryId
    WHERE a.Id = @Id;
END
GO

-- GetSubCategoriesByCategoryId
CREATE OR ALTER PROCEDURE dbo.GetSubCategoriesByCategoryId
    @CategoryId INT
AS
BEGIN
    SET NOCOUNT ON;

    SELECT 
        SubCategoryId,
        CategoryId,
        Name
    FROM dbo.SubCategories
    WHERE CategoryId = @CategoryId
    ORDER BY Name;
END
GO

-- UpdateAnnouncement
CREATE OR ALTER PROCEDURE dbo.UpdateAnnouncement
    @Id            INT,
    @Title         NVARCHAR(200),
    @Description   NVARCHAR(MAX),
    @Status        BIT,
    @CategoryId    INT,
    @SubCategoryId INT
AS
BEGIN
    SET NOCOUNT ON;

    IF NOT EXISTS (
        SELECT 1
        FROM dbo.SubCategories sc
        WHERE sc.SubCategoryId = @SubCategoryId
          AND sc.CategoryId    = @CategoryId
    )
    BEGIN
        THROW 50002, 'SubCategoryId does not belong to CategoryId.', 1;
    END;

    UPDATE dbo.Announcements
    SET Title         = @Title,
        Description   = @Description,
        Status        = @Status,
        CategoryId    = @CategoryId,
        SubCategoryId = @SubCategoryId
    WHERE Id = @Id;

    SELECT @@ROWCOUNT AS RowsAffected;
END
GO

-- End of script